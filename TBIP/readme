Input:
edge_basic.txt:	edge,node1,node2,dis
edge_info.txt:	edge1,edge2,pr


1 degree of latitude or longitude equals to about 111km


vector<bool> visited(edgesNum,false);
visited[edgesNum] = true;

list<int> edges;
for (int i = 0; i < edgesNum; i++) {
	edges.push_back(i);
}

while (seed_edges.size() < K) {

}

list<int>::iterator it;
for (it = edges.begin(); it != edges.end(); it++) {
	cout << *it << endl;
}



map<int, int> test_map;
class Compare {
public:
	bool operator()(int a, int b) {
		return test_map[a] > test_map[b];
	}
};
int main() {
	list<int> test_list;
	test_map[2] = 3;
	test_map[3] = 1;
	test_map[1] = 4;
	test_list.push_back(2);
	test_list.push_back(3);
	test_list.push_back(1);
	test_list.sort(Compare());
	list<int>::iterator iter_list;
	for (iter_list = test_list.begin(); iter_list != test_list.end();
			iter_list++) {
		cout << *iter_list << " ";
	}
	test_map[4] = 5;
	test_list.push_back(4);

	cout << endl;
	for (iter_list = test_list.begin(); iter_list != test_list.end();
			iter_list++) {
		cout << *iter_list << " ";
	}

	test_list.sort(Compare());
	cout << endl;
	for (iter_list = test_list.begin(); iter_list != test_list.end();
			iter_list++) {
		cout << *iter_list << " ";
	}
}

